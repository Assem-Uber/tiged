#!/usr/bin/env node
"use strict";var L=Object.create;var _=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var H=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of q(t))!A.call(e,s)&&s!==r&&_(e,s,{get:()=>t[s],enumerable:!(i=M(t,s))||i.enumerable});return e};var c=(e,t,r)=>(r=e!=null?L(k(e)):{},H(t||!e||!e.__esModule?_(r,"default",{value:e,enumerable:!0}):r,e));var B=()=>typeof document>"u"?new URL(`file:${__filename}`).href:document.currentScript&&document.currentScript.src||new URL("main.js",document.baseURI).href,y=B();var O=c(require("enquirer"),1),P=c(require("fuzzysearch"),1),S=c(require("mri"),1),l=c(require("node:fs/promises"),1),u=c(require("node:path"),1),N=c(require("picocolors"),1),C=require("tiged"),E=require("tinyglobby");var G=require("https-proxy-agent");var p=c(require("node:fs/promises"),1);var T=require("node:module"),d=require("node:os"),D=c(require("node:path"),1);var J=()=>(0,d.homedir)()||(0,d.tmpdir)(),W=J();function $(e,t){let r=(0,T.createRequire)(y);try{return t&&t.clearCache===!0&&delete r.cache[r.resolve(e)],r(e)}catch{return null}}var x=async e=>{try{return await p.access(e),!0}catch{return!1}};var f=D.join(W,".degit");var{bold:z,cyan:j,magenta:F,red:X,underline:Y}=N.default,b=(0,S.default)(process.argv.slice(2),{alias:{f:"force",c:"cache",o:"offline-mode",D:"disable-cache",v:"verbose",m:"mode",s:"subgroup",d:"sub-directory"},boolean:["force","cache","offline-mode","disable-cache","verbose","subgroup"]}),[v,K="."]=b._;async function Q(){if(b.help){let e=(await l.readFile(u.join(__dirname,"..","help.md"),"utf-8")).replace(/^(\s*)#+ (.+)/gm,(t,r,i)=>r+z(i)).replace(/_([^_]+)_/g,(t,r)=>Y(r)).replace(/`([^`]+)`/g,(t,r)=>j(r));process.stdout.write(`
${e}
`)}else if(v)await R(v,K,b);else{let e=new Map,t=await(0,E.glob)("**/access.json",{cwd:f});await Promise.all(t.map(async o=>{let[n,a,m]=o.split(u.sep),h=await l.readFile(`${f}/${o}`,"utf-8"),g=JSON.parse(h);Object.entries(g).forEach(([w,U])=>{let I=`${n}:${a}/${m}#${w}`;e.set(I,new Date(U).getTime())})}));let r=o=>{let[n,a,m]=o.split(u.sep),h=$(`${f}/${o}`);return Object.entries(h).map(([g,w])=>({name:w,message:`${n}:${a}/${m}#${g}`,value:`${n}:${a}/${m}#${g}`}))},i=(await Promise.all((await(0,E.glob)("**/map.json",{cwd:f})).map(r))).reduce((o,n)=>o.concat(n),[]).sort((o,n)=>{let a=e.get(o.value)??0;return(e.get(n.value)??0)-a}),s=await O.default.prompt([{type:"autocomplete",name:"src",message:"Repo to clone?",suggest:(o,n)=>n.filter(({value:a})=>(0,P.default)(o,a)),choices:i},{type:"input",name:"dest",message:"Destination directory?",initial:"."},{type:"toggle",name:"cache",message:"Use cached version?"}]);if(!(!await x(s.dest)||(await l.readdir(s.dest)).length===0)){let{force:o}=await O.default.prompt([{type:"toggle",name:"force",message:"Overwrite existing files?"}]);if(!o){console.error(F("! Directory not empty \u2014 aborting"));return}}await R(s.src,s.dest,{force:!0,cache:s.cache})}}async function R(e,t,r){let i=(0,C.tiged)(e,r);i.on("info",s=>{console.error(j(`> ${s.message?.replace("options.","--")}`))}),i.on("warn",s=>{console.error(F(`! ${s.message?.replace("options.","--")}`))});try{await i.clone(t)}catch(s){s instanceof Error&&(console.error(X(`! ${s.message.replace("options.","--")}`)),process.exit(1))}}Q();
//# sourceMappingURL=bin.cjs.map